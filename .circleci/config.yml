version: 2.1
variables: &variables
    docker:
      - image: microsoft/dotnet:2.2-sdk
    environment: 
        - SOLUTION: "alma-infrastructure.sln"
        - CONFIGURATION: "Release"

        - MSBUILD: "15.0"
        - VISUALSTUDIO: "15.0"
        - VERBOSITY: "minimal"

        - PUBLISHDBPROJ: ""
        - PUBLISHPROJ: ""
        - DEVELOPMENTPROFILE: ""
        - STAGINGPROFILE: ""
        - STAGINGPASSWORD: ""
        - PRODUCTIONPROFILE: ""

        - NUGETREPOSITORY: "https://dev.almasistemas.com.br/nuget/alma"

        - AUTHORS: "Marcos Junior and Alex Duraes"
        - COMPANY: "Marcos Junior and Alex Duraes"
        - PRODUCT: "Common Infrastructure"
        - COPYRIGHT: "Copyright (c) Marcos Junior and Alex Duraes"

        - ICON_URL: "https://avatars2.githubusercontent.com/u/46223903?s:200&v:4"
        - PROJECT_URL: "https://github.com/alma-sys"
        - REPOSITORY_URL: "https://github.com/alma-sys/alma-infra"
        - BUILDACTION: "Clean,Build"

               
jobs:
  build:
    <<: *variables
    steps:
      - checkout
      - run:
          name: Nuget Restore
          command: dotnet restore
      - run:
          name: Build
          command: |
              PACKVERSION=3.`date -u +%y.%m%d.%H%M`;
              if [[ $CIRCLE_BRANCH == *"beta"* ]]; then 
                  VERSIONINFO="-beta"; 
              fi
              echo "Version=$PACKVERSION$VERSIONINFO";
              dotnet msbuild "$SOLUTION" -t:$BUILDACTION -tv:$MSBUILD -verbosity:$VERBOSITY -p:Configuration=$CONFIGURATION -p:VisualStudioVersion=$VISUALSTUDIO -p:Version=$PACKVERSION$VERSIONINFO -p:AssemblyVersion=$PACKVERSION -property:Authors="$AUTHORS" -property:Company="$COMPANY" -property:Product="$PRODUCT" -property:Copyright="$COPYRIGHT" -property:PROJECT_URL="$PROJECT_URL" -property:ICON_URL="$ICON_URL" -property:GeneratePackageOnBuild=true
      - persist_to_workspace:
          root: ./
          paths:
            - ./**/node_modules/
            - ./**/bin/
            - ./**/obj/

  test:
    <<: *variables
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Test
          command: |
            export TESTFILES=$(circleci tests glob "**/bin/$CONFIGURATION/**/*Tests*.dll" | circleci tests split --split-by=timings)
            echo ${TESTFILES}
            dotnet vstest ${TESTFILES} --ResultsDirectory:./test-results
      - store_test_results:
          path: ./test-results
          prefix: tests

  deploy:
    <<: *variables
    steps:
      - attach_workspace:
          at: ./
      - deploy:
          name: Deploy
          command: |
            mkdir ./packages
            shopt -s globstar && for i in **/bin/$CONFIGURATION/**/*.nupkg; do # Whitespace-safe and recursive
                nuget push -ApiKey $NUGETAPIKEY -Source $NUGETREPOSITORY "$i"
                cp "$i" ./packages
            done
      - store_artifacts:
          path: ./packages
          prefix: packages

workflows:
  version: 2
  Build:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
            requires:
                - test
            filters:
                branches:
                    only: master